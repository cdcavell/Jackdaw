<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    <Version>0.0.0.1</Version>
	<GenerateDocumentationFile>True</GenerateDocumentationFile>
	<DocumentationFile>../../../Source/Xml/$(AssemblyName).xml</DocumentationFile>
	<Authors>Christopher D. Cavell</Authors>
	<Copyright>2021 - Christopher D. Cavell</Copyright>
	<PackageLicenseFile>../../../LICENSE</PackageLicenseFile>
  </PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
		<NoWarn>MSB3073;MSB4181</NoWarn>
	</PropertyGroup>
	
  <ItemGroup>
    <PackageReference Include="Serilog.AspNetCore" Version="4.1.0" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\Libraries\Jackdaw.ClassLibrary.Mvc\Jackdaw.ClassLibrary.Mvc.csproj" />
  </ItemGroup>

	<ItemGroup>
		<_findDllFile Include="../../../Source/Xml/XmlToMarkdown.dll" />
		<_findJsonFile Include="../../../Source/Xml/XmlToMarkdown.runtimeconfig.json" />
		<_findLibraryFile Include="../../../Source/Xml/Jackdaw.ClassLibrary.Common.dll" />
	</ItemGroup>

	<Target Name="BuildXmlToMarkdown" AfterTargets="AfterBuild" DependsOnTargets="AfterBuild" Condition="Exists('@(_findDllFile)') AND Exists('@(_findJsonFile)') AND Exists('@(_findLibraryFile)')">
		<Exec Command="cd ../../../Source/Xml/" />
		<Exec Command="dotnet XmlToMarkdown.dll Transform.xsl" WorkingDirectory="../../../Source/Xml/" />
	</Target>

	<Target Name="UpdateWiki" AfterTargets="BuildXmlToMarkdown" DependsOnTargets="BuildXmlToMarkdown" Condition="Exists('@(_findDllFile)') AND Exists('@(_findJsonFile)') AND Exists('@(_findLibraryFile)')">
		<Exec Command="cd ../../../Source/Xml/wiki/" />
		<Exec Command="git status" WorkingDirectory="../../../Source/Xml/wiki/" ContinueOnError="true" />
		<Exec Command="git add ." WorkingDirectory="../../../Source/Xml/wiki/" />
		<Exec Command="git commit -m &quot;Update wiki submodule&quot;" WorkingDirectory="../../../Source/Xml/wiki/" ContinueOnError="true">
			<Output TaskParameter="ExitCode" ItemName="ErrorCode" />
		</Exec>
		<Exec Command="Echo Skipped wiki origin push" Condition=" '@(ErrorCode)' != '0'" />
		<Exec Command="git push origin master" WorkingDirectory="../../../Source/Xml/wiki/" Condition=" '@(ErrorCode)' == '0'" ContinueOnError="true" />
	</Target>

</Project>
