<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Jackdaw.ClassLibrary.Common</name>
    </assembly>
    <members>
        <member name="T:Jackdaw.ClassLibrary.Common.AsciiCodes">
            <summary>
            Static class for converting ascii decimal value to string equivalent.
            </summary>
            <revision>
            __Revisions:__~~
            | Contributor | Build | Revison Date | Description |~
            |-------------|-------|--------------|-------------|~
            | Christopher D. Cavell | 0.0.0.1 | 12/11/2021 | Initial Development |~ 
            </revision>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.NUL">
            <value>(null)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.SOH">
            <value>(start of heading)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.STX">
            <value>(start of text)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.ETX">
            <value>(end of text)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.EOT">
            <value>(end of transmission)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.ENQ">
            <value>(enquiry)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.ACK">
            <value>(acknowledge)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.BEL">
            <value>(bell)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.BS">
            <value>(backspace)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.TAB">
            <value>(horizontal tab)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.LF">
            <value>(NL line feed, new line)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.VT">
            <value>(vertical tab)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.FF">
            <value>(NP form feed, new page)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.CR">
            <value>(carriage return)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.SO">
            <value>(shift out)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.SI">
            <value>(shift in)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.DLE">
            <value>(data link escape)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.DC1">
            <value>(device control 1)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.DC2">
            <value>(device control 2)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.DC3">
            <value>(device control 3)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.DC4">
            <value>(device control 4)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.NAK">
            <value>(negative acknowledge)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.SYN">
            <value>(synchronous idle)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.ETB">
            <value>(end of trans. block)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.CAN">
            <value>(cancel)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.EM">
            <value>(end of medium)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.SUB">
            <value>(substitute)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.ESC">
            <value>(escape)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.FS">
            <value>(file separator)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.GS">
            <value>(group separator)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.RS">
            <value>(record separator)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.US">
            <value>(unit separator)</value>
        </member>
        <member name="P:Jackdaw.ClassLibrary.Common.AsciiCodes.CRLF">
            <value>(carriage return) + (NL line feed, new line)</value>
        </member>
        <member name="M:Jackdaw.ClassLibrary.Common.AsciiCodes.ToChar(System.Int32)">
            <summary>
            Method to return char value of given ascii decimal
            </summary>
            <param name="dec">int</param>
            <returns>char</returns>
            <method>ToChar(int dec)</method>
        </member>
        <member name="M:Jackdaw.ClassLibrary.Common.AsciiCodes.ToString(System.Int32)">
            <summary>
            Method to return string value of given ascii decimal
            </summary>
            <param name="dec">int</param>
            <returns>string</returns>
            <method>ToString(int dec)</method>
        </member>
        <member name="T:Jackdaw.ClassLibrary.Common.Xml.Transform">
            <summary>
            Class to perform XSLT Transformation
            </summary>
            <revision>
            __Revisions:__~~
            | Contributor | Build | Revison Date | Description |~
            |-------------|-------|--------------|-------------|~
            | Christopher D. Cavell | 0.0.0.1 | 12/11/2020 | Initial Development |~ 
            </revision>
        </member>
        <member name="M:Jackdaw.ClassLibrary.Common.Xml.Transform.Write(System.String,System.String,System.String)">
            <summary>
            Method to perform XSLT Transformation and write out file
            </summary>
            <param name="inputXslt">string</param>
            <param name="inputXml">string</param>
            <param name="outputFile">string</param>
            <method>Write(string inputXslt, string inputXml, string outputFile)</method>
        </member>
        <member name="T:System.DateTimeExtensions">
            <summary>
            Extension methods for existing DateTime types.
            </summary>
            <revision>
            __Revisions:__~~
            | Contributor | Build | Revison Date | Description |~
            |-------------|-------|--------------|-------------|~
            | Christopher D. Cavell | 0.0.0.1 | 12/11/2021 | Initial Development |~ 
            </revision>
        </member>
        <member name="M:System.DateTimeExtensions.Timestamp(System.DateTime)">
            <summary>
            Method to return timestamp of current DateTime value
            </summary>
            <param name="value">this DateTime</param>
            <returns>string</returns>
            <method>Timestamp(this DateTime value)</method>
        </member>
        <member name="T:System.Linq.EnumerableExtentions">
            <summary>
            Extension methods for existing Enumerable types.
            </summary>
            <revision>
            __Revisions:__~~
            | Contributor | Build | Revison Date | Description |~
            |-------------|-------|--------------|-------------|~
            | Christopher D. Cavell | 0.0.0.1 | 12/11/2021 | Initial Development |~ 
            </revision>
        </member>
        <member name="M:System.Linq.EnumerableExtentions.DistinctBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Returns elements from a sequence with given distinct column
            </summary>
            <param name="source">this IEnumerable&lt;TSource&gt;</param>
            <param name="keySelector">Func&lt;TSource, TKey&gt;</param>
            <returns>IEnumerable&lt;TSource&gt;</returns>
            <method>DistinctBy&lt;TSource, TKey&gt;(this IEnumerable&lt;TSource&gt; source, Func&lt;TSource, TKey&gt; keySelector)</method>
        </member>
        <member name="T:System.IntegerExtensions">
            <summary>
            Extension methods for existing Integer types.
            </summary>
            <revision>
            __Revisions:__~~
            | Contributor | Build | Revison Date | Description |~
            |-------------|-------|--------------|-------------|~
            | Christopher D. Cavell | 0.0.0.1 | 12/11/2021 | Initial Development |~ 
            </revision>
        </member>
        <member name="M:System.IntegerExtensions.Length(System.Int32)">
            <summary>
            Method to return number of didgits in integer
            </summary>
            <param name="n">this int</param>
            <returns>int</returns>
            <method>Length(this int n)</method>
        </member>
        <member name="M:System.IntegerExtensions.ToArray(System.Int32)">
            <summary>
            Method to return int[] of integer
            </summary>
            <param name="n">this int</param>
            <returns>int[]</returns>
            <method>ToArray(this int n)</method>
        </member>
        <member name="T:System.StringExtensions">
            <summary>
            Extension methods for existing string types.
            </summary>
            <revision>
            __Revisions:__~~
            | Contributor | Build | Revison Date | Description |~
            |-------------|-------|--------------|-------------|~
            | Christopher D. Cavell | 0.0.0.1 | 12/11/2021 | Initial Development |~ 
            </revision>
        </member>
        <member name="M:System.StringExtensions.IsValidEmail(System.String)">
            <summary>
            Method to determine if string is a valid email address
            </summary>
            <param name="value">this string</param>
            <returns>bool</returns>
            <method>IsValidEmail(this string value)</method>
        </member>
        <member name="M:System.StringExtensions.Clean(System.String)">
            <summary>
            Method to remove "Carriage Return" and "Line Feed" as well as Html filtering to provide proper neutralization.
            </summary>
            <param name="value">this string</param>
            <returns>string</returns>
            <method>Clean(this string value)</method>
        </member>
        <member name="M:System.StringExtensions.IsValidGuid(System.String)">
            <summary>
            Method to determine if string is a valid Guid
            </summary>
            <param name="value">this string</param>
            <returns>bool</returns>
            <method>IsValidGuid(this string value)</method>
        </member>
        <member name="M:System.StringExtensions.CleanJsonResult(System.String)">
            <summary>
            Strip escape slash and beginning/ending quotes from Json result string
            </summary>
            <param name="value">this string</param>
            <returns>string</returns>
            <method>CleanJsonResult(this string result)</method>
        </member>
        <member name="M:System.StringExtensions.TrimEnd(System.String,System.String,System.StringComparison)">
            <summary>
            Strip suffix from end of string
            </summary>
            <param name="input">this string</param>
            <param name="suffixToRemove">string</param>
            <param name="comparisonType">StringComparison</param>
            <returns>string</returns>
            <method>TrimEnd(this string input, string suffixToRemove, StringComparison comparisonType = StringComparison.CurrentCulture)</method>
        </member>
        <member name="M:System.StringExtensions.TrimFromFirstChar(System.String,System.Char)">
            <summary>
            Strip all from end of string starting at first char
            </summary>
            <param name="input">this string</param>
            <param name="startTrim">string</param>
            <returns>string</returns>
            <method>TrimFromFirstChar(this string input, char startTrim)</method>
        </member>
        <member name="M:System.StringExtensions.UTF8(System.String)">
            <summary>
            UTF8 Encoding
            </summary>
            <param name="input">this string</param>
            <returns>string</returns>
            <method>UTF8(this string input)</method>
        </member>
    </members>
</doc>
